<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="5.15.0@5c774aca4746caf3d239d9c8cadb9f882ca29352">
  <file src="src/Dispatcher.php">
    <InvalidArgument>
      <code>$listener</code>
    </InvalidArgument>
    <UnevaluatedCode>
      <code><![CDATA[if (!$event->isPropagationStopped()) {
                    continue;
                }]]></code>
      <code>return $event;</code>
    </UnevaluatedCode>
  </file>
  <file src="src/Interface/ListenerProviderInterface.php">
    <InvalidDocblock>
      <code>public function getListenersForEvent(EventInterface $event): Generator;</code>
    </InvalidDocblock>
  </file>
  <file src="src/ListenerProvider.php">
    <DocblockTypeContradiction>
      <code>class_exists($listener)</code>
    </DocblockTypeContradiction>
    <ImplementedParamTypeMismatch>
      <code>$listener</code>
    </ImplementedParamTypeMismatch>
    <InvalidArgument>
      <code>$listener</code>
      <code>$map[self::LISTENERS][$event][$priority]</code>
    </InvalidArgument>
    <InvalidCast>
      <code>$listener</code>
    </InvalidCast>
    <InvalidReturnType>
      <code><![CDATA[Generator<int,(callable(EventInterface<bool>):void),mixed,void>]]></code>
    </InvalidReturnType>
    <LessSpecificReturnType>
      <code>array</code>
    </LessSpecificReturnType>
    <MismatchingDocblockParamType>
      <code><![CDATA[callable(EventInterface<bool>):void]]></code>
    </MismatchingDocblockParamType>
    <MissingThrowsDocblock>
      <code><![CDATA[throw new FailedToDetermineEventTypeException($reflectionException->getMessage());]]></code>
    </MissingThrowsDocblock>
    <MixedArgument>
      <code>$listener</code>
    </MixedArgument>
    <MoreSpecificReturnType>
      <code><![CDATA[Generator<class-string<EventInterface<bool>>>]]></code>
    </MoreSpecificReturnType>
    <PossiblyInvalidArgument>
      <code>$listener</code>
      <code>$listener</code>
    </PossiblyInvalidArgument>
    <PossiblyInvalidCast>
      <code>$listener</code>
    </PossiblyInvalidCast>
    <UndefinedDocblockClass>
      <code>$listener</code>
    </UndefinedDocblockClass>
    <UnusedDocblockParam>
      <code>$event</code>
      <code>$listener</code>
    </UnusedDocblockParam>
  </file>
  <file src="tests/Unit/DispatcherTest.php">
    <PossiblyUndefinedMethod>
      <code>read</code>
    </PossiblyUndefinedMethod>
  </file>
  <file src="tests/Unit/Exception/EventMustImplementEventInterfaceExceptionTest.php">
    <InvalidArgument>
      <code>stdClass::class</code>
    </InvalidArgument>
  </file>
  <file src="tests/Unit/Exception/EventNotFoundExceptionTest.php">
    <ArgumentTypeCoercion>
      <code><![CDATA['does-not-exist']]></code>
    </ArgumentTypeCoercion>
    <UndefinedClass>
      <code><![CDATA['does-not-exist']]></code>
    </UndefinedClass>
  </file>
  <file src="tests/Unit/Exception/SubscriberMustImplementSubscriberInterfaceExceptionTest.php">
    <InvalidArgument>
      <code>InvalidTestEventSubscriber::class</code>
    </InvalidArgument>
  </file>
  <file src="tests/Unit/ListenerProviderTest.php">
    <ArgumentTypeCoercion>
      <code>$listener</code>
    </ArgumentTypeCoercion>
    <DeprecatedClass>
      <code><![CDATA[IgnoreMethodForCodeCoverage(ListenerProvider::class, 'createReflectionFunction')]]></code>
    </DeprecatedClass>
    <MixedArgument>
      <code>$listener</code>
    </MixedArgument>
    <MixedAssignment>
      <code>$listener</code>
    </MixedAssignment>
    <UnusedDocblockParam>
      <code>$event</code>
    </UnusedDocblockParam>
  </file>
</files>
